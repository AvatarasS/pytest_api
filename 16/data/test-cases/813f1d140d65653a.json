{"uid":"813f1d140d65653a","name":"test_submit_unauthorised_order","fullName":"tests.test_api.TestBookstoreAPI#test_submit_unauthorised_order","historyId":"e8d2b11e75b87788393f8ea9c8ec8069","time":{"start":1684374113667,"stop":1684374113668,"duration":1},"status":"broken","statusMessage":"requests.exceptions.MissingSchema: Invalid URL '/orders': No scheme supplied. Perhaps you meant https:///orders?","statusTrace":"self = <tests.test_api.TestBookstoreAPI object at 0x7f476628e050>\n\n    def test_submit_unauthorised_order(self) -> None:\n        book_id = 1\n        body = {\n            \"bookId\": book_id,\n            \"customerName\": read_from_file(data_file, \"customer_name\")\n        }\n>       response = requests.post(url=f\"{BASE_URL}/orders\", json=body)\n\ntests/test_api.py:128: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/hostedtoolcache/Python/3.11.3/x64/lib/python3.11/site-packages/requests/api.py:115: in post\n    return request(\"post\", url, data=data, json=json, **kwargs)\n/opt/hostedtoolcache/Python/3.11.3/x64/lib/python3.11/site-packages/requests/api.py:59: in request\n    return session.request(method=method, url=url, **kwargs)\n/opt/hostedtoolcache/Python/3.11.3/x64/lib/python3.11/site-packages/requests/sessions.py:573: in request\n    prep = self.prepare_request(req)\n/opt/hostedtoolcache/Python/3.11.3/x64/lib/python3.11/site-packages/requests/sessions.py:484: in prepare_request\n    p.prepare(\n/opt/hostedtoolcache/Python/3.11.3/x64/lib/python3.11/site-packages/requests/models.py:368: in prepare\n    self.prepare_url(url, params)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <PreparedRequest [POST]>, url = '/orders', params = OrderedDict()\n\n    def prepare_url(self, url, params):\n        \"\"\"Prepares the given HTTP URL.\"\"\"\n        #: Accept objects that have string representations.\n        #: We're unable to blindly call unicode/str functions\n        #: as this will include the bytestring indicator (b'')\n        #: on python 3.x.\n        #: https://github.com/psf/requests/pull/2238\n        if isinstance(url, bytes):\n            url = url.decode(\"utf8\")\n        else:\n            url = str(url)\n    \n        # Remove leading whitespaces from url\n        url = url.lstrip()\n    \n        # Don't do any URL preparation for non-HTTP schemes like `mailto`,\n        # `data` etc to work around exceptions from `url_parse`, which\n        # handles RFC 3986 only.\n        if \":\" in url and not url.lower().startswith(\"http\"):\n            self.url = url\n            return\n    \n        # Support for unicode domain names and paths.\n        try:\n            scheme, auth, host, port, path, query, fragment = parse_url(url)\n        except LocationParseError as e:\n            raise InvalidURL(*e.args)\n    \n        if not scheme:\n>           raise MissingSchema(\n                f\"Invalid URL {url!r}: No scheme supplied. \"\n                f\"Perhaps you meant https://{url}?\"\n            )\nE           requests.exceptions.MissingSchema: Invalid URL '/orders': No scheme supplied. Perhaps you meant https:///orders?\n\n/opt/hostedtoolcache/Python/3.11.3/x64/lib/python3.11/site-packages/requests/models.py:439: MissingSchema","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_api"},{"name":"subSuite","value":"TestBookstoreAPI"},{"name":"host","value":"fv-az344-968"},{"name":"thread","value":"2644-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_api"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"813f1d140d65653a.json","parameterValues":[]}